"""
Rules for NodeJS.
"""

module(
    name = "build_bazel_rules_nodejs",
    version = "3.8.0-canva-0",
    # Increase this whenever a release is backwards incompatible.
    compatibility_level = 1,
)

bazel_dep(name = "stardoc", version = "0.6.2", dev_dependency = True)
bazel_dep(name = "bazel_skylib", version = "1.4.2", dev_dependency = False)
bazel_dep(name = "aspect_bazel_lib", version = "1.35.0", dev_dependency = False)
bazel_dep(name = "platforms", version = "0.0.4", dev_dependency = False)
bazel_dep(name = "aspect_rules_ts", version = "2.0.0-rc1", dev_dependency = True)
bazel_dep(name = "aspect_rules_js", version = "1.32.6", dev_dependency = True)
# TODO v6 is now out
bazel_dep(name = "rules_nodejs", version = "5.8.2", dev_dependency = True)
bazel_dep(name = "aspect_rules_rollup", version = "1.0.0", dev_dependency = True)

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
# TODO Update this
node.toolchain(node_version = "16.0.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//lib/private:pnpm-lock.yaml",
    npmrc = "//lib/private:.npmrc",
    verify_node_modules_ignored = "//:.bazelignore",
    data = [
        "//lib/private:package.json",
        "//lib/private:pnpm-workspace.yaml",
        "//lib/private/rules/nodejs_binary_test/linker:package.json",
    ],
)
use_repo(npm, "npm")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")
